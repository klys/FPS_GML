<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///models load

//graphic settings it saves to ini file
ini_open("data.ini")                                  //open data.ini
lp = ini_read_real("options","lowpoly",0)             //read lowpoly
ini_close()                                           //close data.ini


if lp = 0 then {                                      //load high poly models

global.model_crate = d3d_model_create();
d3d_model_load(global.model_crate,'models/crate.gmmod');

global.model_barrel = d3d_model_create();
d3d_model_load(global.model_barrel,'models/barrel.gmmod');

global.model_tree_trunk = d3d_model_create();
d3d_model_load(global.model_tree_trunk,'models/tree_trunk.gmmod');

global.model_tree_leaves = d3d_model_create();
d3d_model_load(global.model_tree_leaves,'models/tree_leaves.gmmod');

}

if lp = 1 then {        //load low poly models (better for low-end PC / netbooks)

global.model_crate = d3d_model_create();
d3d_model_load(global.model_crate,'models/crate_lowpoly.gmmod');

global.model_barrel = d3d_model_create();
d3d_model_load(global.model_barrel,'models/barrel_lowpoly.gmmod');

global.model_tree_trunk = d3d_model_create();
d3d_model_load(global.model_tree_trunk,'models/tree_trunk_lowpoly.gmmod');

global.model_tree_leaves = d3d_model_create();
d3d_model_load(global.model_tree_leaves,'models/tree_leaves_lowpoly.gmmod');

}

//normal models
global.model_crate_piece = d3d_model_create();
d3d_model_load(global.model_crate_piece,'models/crate_piece.gmmod');

global.model_barrel_piece = d3d_model_create();
d3d_model_load(global.model_barrel_piece,'models/barrel_piece.gmmod');

global.model_ak47 = d3d_model_create();
d3d_model_load(global.model_ak47,'models/ak47.gmmod');

global.model_ak47_flash = d3d_model_create();
d3d_model_load(global.model_ak47_flash,'models/ak47_flash.gmmod');

global.model_ak47_clip = d3d_model_create();
d3d_model_load(global.model_ak47_clip,'models/ak47_clip.gmmod');

global.model_arm = d3d_model_create();
d3d_model_load(global.model_arm,'models/arm.gmmod');

global.model_arm2 = d3d_model_create();
d3d_model_load(global.model_arm2,'models/arm2.gmmod');

global.model_brass = d3d_model_create();
d3d_model_load(global.model_brass,'models/brass.gmmod');

global.model_bush = d3d_model_create();
d3d_model_load(global.model_bush,'models/bush.gmmod');

global.model_container = d3d_model_create();
d3d_model_load(global.model_container,'models/container.gmmod');

global.model_slope = d3d_model_create();
d3d_model_load(global.model_slope,'models/slope.gmmod');

global.model_audio = d3d_model_create();
d3d_model_load(global.model_audio,'models/audio.gmmod');
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///texture load - easy
global.tex_crate = background_add("textures/crate.jpg",false,false)

global.tex_barrel = background_add("textures/barrel.jpg",false,false)

global.tex_floor = background_add("textures/floor.jpg",false,false)

global.tex_scorch = background_add("textures/scorch.png",false,false)

global.tex_sky = background_add("textures/sky.jpg",false,false)

global.tex_ak47 = background_add("textures/ak47.jpg",false,false)

global.tex_flash = background_add("textures/flash.jpg",false,false)

global.tex_arm = background_add("textures/arm.jpg",false,false)

global.tex_brass = background_add("textures/brass.jpg",false,false)

global.tex_leaves = background_add("textures/leaves.png",true,false)

global.tex_leaves2 = background_add("textures/leaves2.png",true,false)

global.tex_bush_dead = background_add("textures/bush_dead.png",true,false)

global.tex_hurt = background_add("textures/hurt.png",true,false)

global.tex_bark = background_add("textures/bark.jpg",false,false)

global.tex_grass = background_add("textures/grass.jpg",false,false)

global.tex_container = background_add("textures/container.jpg",false,false)

global.tex_audio = background_add("textures/audio.jpg",false,false)

global.tex_target = background_add("textures/target.jpg",false,false)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize sound
ex_audio_initialize();
//footstep sound
ex_audio_load("footstep_tiles","sounds/footstep_tiles.ogg")
ex_audio_load("footstep_wood","sounds/footstep_wood.ogg")
ex_audio_load("footstep_grass","sounds/footstep_grass.ogg")
ex_audio_load("footstep_metal","sounds/footstep_grass.ogg")
ex_audio_load("footstep_asphalt","sounds/footstep_metal.ogg")
//object sound
ex_audio_load("snd_crate_smash","sounds/crate_smash.ogg")
ex_audio_load("snd_explosion","sounds/explosion.ogg")
ex_audio_load("snd_metal_hit","sounds/metal_hit.ogg")
ex_audio_load("snd_wood_hit","sounds/wood_hit.ogg")
ex_audio_load("snd_fire_loop","sounds/wood_hit.ogg")
//gun sounds
ex_audio_load("snd_ak47","sounds/ak47.ogg")
ex_audio_load("snd_boltpull","sounds/boltpull.ogg")
ex_audio_load("snd_clipin","sounds/clipin.ogg")
ex_audio_load("snd_clipout","sounds/clipout.ogg")
ex_audio_load("snd_leaves","sounds/leaves.ogg")
ex_audio_load("snd_click","sounds/click.ogg")
//other 
//ex_audio_load("snd_music","sounds/music.ogg")
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroying this object because we load all resources to global variables
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
