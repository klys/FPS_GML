<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//options, loaded from data.ini
ini_open("data.ini")                                  //open data.ini
fs = ini_read_real("options","fullscreen",0)          //read fullscreen (first one is section, then what key and then the default value)
tf = ini_read_real("options","texfilter",1)           //read texture filtering
lt = ini_read_real("options","leavefilter",0)         //read leaves texture filtering, turn on to see the difference
lp = ini_read_real("options","lowpoly",0)             //read lowpoly
vd = ini_read_real("options","viewdistance",1000)     //read viewdistance
ss = ini_read_real("options","sensitivity",10)        //read sensitivity
pl = ini_read_real("options","particlelive",1000)     //read particle live
br = ini_read_real("options","brass",1)               //read brass
fv = ini_read_real("options","fov",80)                //read FOV
ini_close()                                           //close data.ini

//you can change these value's in data.ini
global.low_poly_models = lp             //load high or low poly models?
global.fullscreen = fs                  //fullscreen or windowed?
global.sensitivity = ss                 //lower this value for a higher sensitivity
global.viewdistance = vd                //how far objects are seen (particles is half the viewdistance)
global.texfilter = tf                   //texture filtering
global.leavetexfilter = lt              //leaves texture filtering
global.particle_live = pl               //how long are particles alive? like brass and crate pieces
global.brass = br                       //enable bulletshell ejecting (look at the floor after you fired)
global.fov = fv                         //how far do you want the gun away? (65 ~ 80 for best results)
                                        //NOTE: if the gun is inside a wall when standing next to it, enlarge the camera sprite or lower the FOV.
                                        
//if fullscreen = 1 then {window_set_fullscreen(true)}

//Player Variables
global.walk_speed = 40                              //speed for footstep sound
global.footstep_on_floor = 'footstep_tiles'    //when landing on the ground what sound will it make?
global.fall_rate = 0.1                              //gravity

//gun stats (if you change guns you can put this in a pickup item to change all stats)
global.gun_arm = global.model_arm           //arm model
global.gun_arm2 = global.model_arm2         //arm model
global.gun_arm_texture = global.tex_arm     //arm texture
global.gun = global.model_ak47              //what gun model
global.gun_texture = global.tex_ak47        //the corrisponding gun texture
global.gun_stat_sound = 'snd_ak47'    //the sound wich the gun makes
global.gun_stat_firerate = 7                //smaller the faster
global.gun_stat_accuracy = 20               //smaller the better
global.gun_stat_range = 50                  //howfar does the bullet go?
global.gun_stat_recoil = 0.4                //smaller the less recoil
global.gun_stat_recoil_climb = 0.2          //how much will the gun climb in recoil while shooting?
global.gun_clip = global.model_ak47_clip    //what magazine will be used?
global.gun_clip_amount = 30                 //how many bullets in one clip?
global.gun_max_ammo = 180                   //max ammo that can be carried

global.ak47_bullets = global.gun_clip_amount
global.ak47_ammo = 60

//apply options
    if global.texfilter = 1 { texture_set_interpolation(true) }
    Obj_Camera.gun_z=(global.fov/10) //apply Fov (because the Camera is first then the options)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
